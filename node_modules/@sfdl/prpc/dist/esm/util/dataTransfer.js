import { v4 as uuidv4 } from 'uuid';
var AttachedFileSerializer = /** @class */ (function () {
    function AttachedFileSerializer() {
        var _this = this;
        /**
         * A class for managing JSON with file uploads. Supports both File and FileList
         * and replaces these with a `cid:` URL and attaches the file.
         *
         * Use with the custom serialiser option JSON.stringify:
         *
         * const files = new AttachedFileSerializer();
         * const json = JSON.stringify(data, files.serializer);
         *
         */
        this.files = {};
        this.serializer = function (key, value) {
            if (value instanceof File) {
                var guid = uuidv4();
                _this.files[guid] = value;
                return { __type__: 'file', cid: guid };
            }
            else if (value instanceof FileList) {
                var fileArray = [];
                for (var i = 0; i < value.length; i++) {
                    fileArray.push(value[i]);
                }
                return fileArray;
            }
            return value;
        };
        this.formDataAppend = function (formData) {
            Object.keys(_this.files).forEach(function (k) {
                formData.append(k, _this.files[k]);
            });
        };
    }
    return AttachedFileSerializer;
}());
export { AttachedFileSerializer };
